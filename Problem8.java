package projectEuler;

/*
public class Problem8 {

	public static void main (String[] args) 
	{
		String number="7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
		long maxp=1;
		for (int i=0;i<number.length()-13;i++) {
			for (int j=i;j<i+13;j++) {
				long p=1;
				for (int k=i;k<=j;k++) {
					p*=(int)number.charAt(k)-'0';
				}
				if (maxp<p) {
					maxp=p;
				}
			}
		}
		System.out.println(maxp);
	}
}
*/








//4271240516067186112
//23514624000



public class Problem8 {

	public static void main (String[] args) 
	{ 
		String num="7316717653133062491922511967442657474235534919493469835203127745063262395783180169848018694788518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557668966489504452445231617318564030987111217223831136222989342338030813533627661428280644448664523874930358907296290491560440772390713810515859307960866701724271218839987979087922749219016997208880937766572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397536978179778461740649551492908625693219784686224828392241375657056057490261407972968652414535100474821663704844031998900088952434506585412275886668811642717147992444292823086346567481391912316282458617864583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";		
        		
		long maxNum=0;
		
		/*for(int i=0;i<num.length()-13;i++){*/
			long sum=1;
int i=1;
			for(int j=1;j<13;j++){
				//System.out.println(num.charAt(i+j));
				System.out.println(j);
				sum*=(i*j);
				//sum*=(long)num.charAt(i+j);
				
			}
			
			if(maxNum<sum){
			maxNum=sum; 
			}
				System.out.println(sum
					);
		}
		
	}
	